import React, { useEffect, useState } from "react";
import _app from "./_app";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import dynamic from "next/dynamic";
import Header from "../components/Header";
import Loading from "../components/Loader/Loading";
import Footer from "../components/Footer/Footer";
import styles from "../styles/Home.module.css";

const StarRating = dynamic(() => import("../components/StarRating"), { ssr: false });

const url = "https://ghibliapi.herokuapp.com/films";

export default function Home() {
  
  const [loading, setLoading] = useState(true)
  const [data, setData] = useState([])
  const [searchInput, setSearchInput] = useState('')
  const [filterResult, setFilterResult] = useState([])
  //readmore -description option
  const [readMore, setReadMore] = useState(false)
  

  //filter function and onChange event
  const searchItem = (value) => {
    setSearchInput(value)
    if (searchInput !== ''){
      const filterData = data.filter((movie) =>{
        return Object.values(movie).join('').toLowerCase().includes(searchInput.toLowerCase())
      })
     setFilterResult(filterData)
    } 
    else {
      setFilterResult(data)
    }
   }

  //Fetching data form API 
  async function fetchMovieData() {
    setLoading(true)

    try {
      const response = await fetch(url)
      const data = await response.json()
      setLoading(false)
      setData(data)
      console.log(data)
    } catch (error) {
      setLoading(false)
      console.log(error)
    }
  }

  useEffect(()=>{
    fetchMovieData()
  }, [])

  if(loading){
    return (
      <main>
        <Loading/>
      </main>
    )
  }
   return (
     <>
     <div className={styles.home_container}>
     <Head> 
        <title>STUDIO GHIBLI</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico"/>
      </Head>
      <Header showFilterBtn showSear-chBtn showUserLink/> 
      <section className={styles.section_search}>
        <form className={styles.search_form}>
          <div className={styles.form_control}>
            <label htmlFor="name">Search your favorite movie</label>
          <input type="text"
            id="name"
             onChange={(e) => searchItem(e.target.value)}>
          </input>
          </div>
          </form>
          </section> 
       {
         searchInput.length > 1 ? (
           filterResult.map((movie)=>{
            const {id, title, image, release_date, description} = movie
             return (
               <article key={id} className={styles.movie_card_container}> 
              <section className={styles.movie_card_image}>
              <img className={styles.img} src={image} alt={title}></img>
                </section>
                <section className={styles.movie_card_description}>
                <h3>{title}</h3>
                <h4>{release_date}</h4>
                <p className={styles.text}>
                {readMore ? description : `${description.substring(0,200)}...`}
                  <button className={styles.read_btn}onClick={()=> setReadMore(!readMore)}>
                    {readMore ? 'show less' : ' read more'}
                  </button>
                </p>
                <StarRating/>
                </section>
                </article>
             )
           })
         ): (
             data.map((movie) => {  
             const {id, title, image, release_date, description} = movie
             return ( 
              <article key={id} className={styles.movie_card_container}> 
              <section className={styles.movie_card_image}>
              <img src={image} alt={title}></img>
                </section>
                <section className={styles.movie_card_description}>
                <h3>{title}</h3>
                <h4>{release_date}</h4>
                {/*<p className={styles.text}>{description}*/}
                <p className={styles.text}>
                 {readMore ? description : `${description.substring(0,200)}...`}
                  <button className={styles.read_btn}onClick={()=> setReadMore(!readMore)}>
                    {readMore ? 'show less' : ' read more'}
                  </button>
                
                </p>
                <StarRating className={styles.start_rating}/>
                </section>
                </article>
             )
             }) ) 
       }
     <Footer/>
     </div>    
     </>
   )
   }
  

